# Test Repository Secrets Configuration
# Run this workflow to verify your secrets are configured correctly

name: Test Repository Secrets

on:
  workflow_dispatch:
    inputs:
      test_environment:
        description: 'Environment to test'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  test-secrets:
    name: 🧪 Test Secrets Configuration
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔍 Verify Required Secrets
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          PROD_SUPABASE_URL: ${{ secrets.PRODUCTION_SUPABASE_URL }}
          PROD_SUPABASE_KEY: ${{ secrets.PRODUCTION_SUPABASE_ANON_KEY }}
          STAGING_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
          STAGING_SUPABASE_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
        run: |
          echo "🔍 Testing repository secrets configuration..."
          echo ""

          # Test Vercel secrets
          if [ -n "$VERCEL_TOKEN" ]; then
            echo "✅ VERCEL_TOKEN: Configured (${#VERCEL_TOKEN} characters)"
          else
            echo "❌ VERCEL_TOKEN: Missing"
            exit 1
          fi

          if [ -n "$VERCEL_ORG_ID" ]; then
            echo "✅ VERCEL_ORG_ID: Configured ($VERCEL_ORG_ID)"
          else
            echo "❌ VERCEL_ORG_ID: Missing"
            exit 1
          fi

          if [ -n "$VERCEL_PROJECT_ID" ]; then
            echo "✅ VERCEL_PROJECT_ID: Configured (${VERCEL_PROJECT_ID:0:8}...)"
          else
            echo "❌ VERCEL_PROJECT_ID: Missing"
            exit 1
          fi

          # Test Supabase secrets
          if [ -n "$PROD_SUPABASE_URL" ]; then
            echo "✅ PRODUCTION_SUPABASE_URL: Configured ($PROD_SUPABASE_URL)"
          else
            echo "❌ PRODUCTION_SUPABASE_URL: Missing"
            exit 1
          fi

          if [ -n "$PROD_SUPABASE_KEY" ]; then
            echo "✅ PRODUCTION_SUPABASE_ANON_KEY: Configured (${#PROD_SUPABASE_KEY} characters)"
          else
            echo "❌ PRODUCTION_SUPABASE_ANON_KEY: Missing"
            exit 1
          fi

          # Optional staging secrets
          if [ -n "$STAGING_SUPABASE_URL" ]; then
            echo "✅ STAGING_SUPABASE_URL: Configured ($STAGING_SUPABASE_URL)"
          else
            echo "⚠️ STAGING_SUPABASE_URL: Not configured (optional)"
          fi

          if [ -n "$STAGING_SUPABASE_KEY" ]; then
            echo "✅ STAGING_SUPABASE_ANON_KEY: Configured (${#STAGING_SUPABASE_KEY} characters)"
          else
            echo "⚠️ STAGING_SUPABASE_ANON_KEY: Not configured (optional)"
          fi

          echo ""
          echo "🎉 All required secrets are configured!"

      - name: 🔧 Test Build with Secrets
        working-directory: ./client2
        env:
          VITE_API_BASE_URL: https://library-server-m6gr.onrender.com
          VITE_AI_SERVICE_URL: https://literati-ai-production.onrender.com
          VITE_SUPABASE_URL: ${{ secrets.PRODUCTION_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.PRODUCTION_SUPABASE_ANON_KEY }}
          VITE_ENABLE_SERVICE_WORKER: true
          VITE_APP_ENV: ${{ github.event.inputs.test_environment }}
        run: |
          echo "🏗️ Testing build with configured secrets..."

          # Install dependencies
          npm install -g pnpm
          pnpm install --frozen-lockfile

          # Test production build
          pnpm run build:production

          echo "✅ Build completed successfully with secrets!"

      - name: 📊 Success Report
        run: |
          echo "# 🎉 Secrets Configuration Test - SUCCESS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All required repository secrets are properly configured!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ✅ Verified Secrets:" >> $GITHUB_STEP_SUMMARY
          echo "- VERCEL_TOKEN ✅" >> $GITHUB_STEP_SUMMARY
          echo "- VERCEL_ORG_ID ✅" >> $GITHUB_STEP_SUMMARY
          echo "- VERCEL_PROJECT_ID ✅" >> $GITHUB_STEP_SUMMARY
          echo "- PRODUCTION_SUPABASE_URL ✅" >> $GITHUB_STEP_SUMMARY
          echo "- PRODUCTION_SUPABASE_ANON_KEY ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🚀 Ready for Deployment!" >> $GITHUB_STEP_SUMMARY
          echo "Your CI/CD pipeline is now configured and ready to deploy." >> $GITHUB_STEP_SUMMARY