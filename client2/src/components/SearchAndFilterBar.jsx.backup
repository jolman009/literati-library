// src/components/SearchAndFilterBar.jsx
import React from 'react';
import { MD3TextField, MD3ChipGroup, MD3Chip, MD3Button } from './Material3';

const SearchAndFilterBar = ({
  searchQuery,
  onSearchChange,
  selectedGenres,
  onGenreChange,
  sortBy,
  onSortChange,
  viewMode,
  onViewModeChange,
  availableGenres
}) => {
  return (
    <div className="search-filter-bar">
      <MD3TextField
        label="Search books..."
        value={searchQuery}
        onChange={(e) => onSearchChange(e.target.value)}
        className="search-input"
        leadingIcon="🔍"
      />

      {/* Fixed: Properly handle multiSelect prop */}
     <MD3ChipGroup
        label="Filter by genre"
        multiSelect={true}
        value={selectedGenres}
        onChange={onGenreChange}
      >
        {availableGenres.map(genre => (
          <MD3Chip key={genre} value={genre}>
            {genre}
          </MD3Chip>
        ))}
      </MD3ChipGroup> 

      <div className="view-controls">
        <div className="view-mode-toggle">
          <MD3Button
            variant={viewMode === 'grid' ? 'filled' : 'outlined'}
            size="small"
            onClick={() => onViewModeChange('grid')}
          >
            Grid
          </MD3Button>
          <MD3Button
            variant={viewMode === 'list' ? 'filled' : 'outlined'}
            size="small"
            onClick={() => onViewModeChange('list')}
          >
            List
          </MD3Button>
        </div>
      </div>
    </div>
  );
};

export default SearchAndFilterBar;


/*          <SearchAndFilterBar
              searchQuery={searchQuery}
              onSearchChange={setSearchQuery}
              selectedGenres={selectedGenres}
              onGenreChange={setSelectedGenres}
              selectedStatus={selectedStatus} // NEW
              onStatusChange={setSelectedStatus} // NEW
              sortBy={sortBy}
              onSortChange={setSortBy}
              viewMode={viewMode}
              onViewModeChange={setViewMode}
              availableGenres={availableGenres}
              books={localBooks} // NEW: For status counts
              showAdvanced={showAdvancedFilters}
              onToggleAdvanced={() => setShowAdvancedFilters(!showAdvancedFilters)}
              batchMode={batchMode}
              onToggleBatchMode={() => setBatchMode(!batchMode)}
              selectedBooks={selectedBooks}
              onClearSelection={handleClearSelection}
              onBatchAction={handleBatchAction}
            /> */